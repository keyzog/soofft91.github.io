{"version":3,"sources":["compontns/Navbar.jsx","compontns/pages/PageOptions.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navbar","props","className","n","i","t","map","item","page","onClick","setPage","PageOptions","url","setUrl","useState","brightness","setBrightness","effectTimeout","setEffectTimeout","param_1","setParam_1","param_2","setParam_2","param_3","setParam_3","sendOpts","a","console","log","fetch","method","body","JSON","stringify","mode","headers","response","type","value","onChange","target","class","max","hexToRgb","hex","result","exec","parseInt","App","color","setColor","collorsCollection","setCollorCollection","sendEffect","effectName","sendColor","oldState","cc","style","backgroundColor","key","l","ef","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.29397969.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navbar = (props) => {\n\tconst items = [\n\t\t{ n: \"color\", i: \"fas fa-palette\", t: \"Упр. цветами\" },\n\t\t{ n: \"effect\", i: \"fas fa-fire\", t: \"Эффекты\" },\n\t\t{ n: \"options\", i: \"fas fa-cog\", t: \"Настройки\" },\n\t];\n\n\treturn (\n\t\t<div className=\"app-menu text-center\">\n\t\t\t<div className=\"row\">\n\t\t\t\t{items.map((item) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`col-4 app-menu-btn ${\n\t\t\t\t\t\t\tprops.page === item.n && \"active\"\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tonClick={() => props.setPage(item.n)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className={item.i} />\n\t\t\t\t\t\t<div>{item.t}</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\n\nconst PageOptions = ({ url, setUrl }) => {\n\tconst [brightness, setBrightness] = useState(50);\n\tconst [effectTimeout, setEffectTimeout] = useState(50);\n\tconst [param_1, setParam_1] = useState(1);\n\tconst [param_2, setParam_2] = useState(1);\n\tconst [param_3, setParam_3] = useState(1);\n\n\tconst sendOpts = async () => {\n\t\tconsole.log(\"⏫ sendOpts\");\n\t\tconst response = await fetch(\"http://\" + url + \"/set-opts\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify({\n\t\t\t\tbrightness,\n\t\t\t\teffectTimeout,\n\t\t\t\tparam_1,\n\t\t\t\tparam_2,\n\t\t\t\tparam_3,\n\t\t\t}),\n\t\t\tmode: \"no-cors\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t});\n\t\tconsole.log(response);\n\t};\n\n\treturn (\n\t\t<div className=\"pt-3\">\n\t\t\t<h3 className=\"mb-4\">Настройки</h3>\n\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>Target Url</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={url}\n\t\t\t\t\tonChange={({ target }) => setUrl(target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<hr />\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>\n\t\t\t\t\tЯркость <span class=\"badge badge-primary\">{brightness}</span>\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmax={255}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={brightness}\n\t\t\t\t\tonChange={({ target }) => setBrightness(target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"form-group\">\n\t\t\t\t<label>\n\t\t\t\t\tСкорость <span class=\"badge badge-primary\">{effectTimeout}</span>\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tmax={1000}\n\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\tvalue={effectTimeout}\n\t\t\t\t\tonChange={({ target }) => setEffectTimeout(target.value)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-6 form-group\">\n\t\t\t\t\t<label>Множитель размера</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={param_1}\n\t\t\t\t\t\tonChange={({ target }) => setParam_1(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group col-6\">\n\t\t\t\t\t<label>Множитель задержек</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={param_2}\n\t\t\t\t\t\tonChange={({ target }) => setParam_2(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"form-group col-6\">\n\t\t\t\t\t<label>Кол-во</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tvalue={param_3}\n\t\t\t\t\t\tonChange={({ target }) => setParam_3(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<button class=\"btn btn-primary\" onClick={sendOpts}>\n\t\t\t\tSend Opts\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default PageOptions;\n","import React, { useState } from \"react\";\n\nimport \"./App.css\";\nimport Navbar from \"./compontns/Navbar\";\nimport PageOptions from \"./compontns/pages/PageOptions\";\n\nfunction hexToRgb(hex) {\n\tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\treturn result\n\t\t? [\n\t\t\t\tparseInt(result[1], 16),\n\t\t\t\tparseInt(result[2], 16),\n\t\t\t\tparseInt(result[3], 16),\n\t\t  ]\n\t\t: null;\n}\n\nfunction App() {\n\tconst [page, setPage] = useState(\"options\");\n\t// inputs\n\tconst [url, setUrl] = useState(\"192.168.1.2\");\n\tconst [color, setColor] = useState(\"#00f900\");\n\n\tconst [collorsCollection, setCollorCollection] = useState([]);\n\tconst clearColorsCollection = () => setCollorCollection([]);\n\tconst pushColorInCollection = () => {\n\t\tsetCollorCollection((oldState) => [...oldState, hexToRgb(color)]);\n\t};\n\n\t// EFFECTS\n\t// n - name\n\t// l - label\n\tconst effects = [\n\t\t{ n: \"rainbow\", l: \"радуга\" },\n\t\t{ n: \"garland\", l: \"гирлянда\" },\n\t\t{ n: \"garland_white\", l: \"гирлянда (белая)\" },\n\t\t{ n: \"garland_white2\", l: \"✨ стразы\" },\n\t\t{ n: \"police\", l: \"🚨\" },\n\t\t{ n: \"gradient\", l: \"grad\" },\n\t\t{ n: \"sin\", l: \"sin\" },\n\t];\n\n\t// REQUESTS\n\tconst sendEffect = async (effectName) => {\n\t\tconsole.log(\"⏫ sendEffect\", effectName);\n\t\tconst response = await fetch(\"http://\" + url + \"/set-effect\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(effectName),\n\t\t\tmode: \"no-cors\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t});\n\t\tconsole.log(response);\n\t};\n\n\tconst sendColor = async () => {\n\t\tconsole.log(\"⏫ sendColor\", hexToRgb(color));\n\n\t\tconst response = await fetch(\"http://\" + url + \"/set-color\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(hexToRgb(color)),\n\t\t\tmode: \"no-cors\", // no-cors, *cors, same-origin\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t// \"Content-Type\": \"application/x-www-form-urlencoded\",\n\t\t\t},\n\t\t});\n\t\tconsole.log(response);\n\t};\n\tconst sendCollection = () => {\n\t\tconsole.log(\"⏫ sendCollection\", collorsCollection);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Navbar {...{ setPage, page }} />\n\n\t\t\t{page === \"options\" && <PageOptions {...{ url, setUrl }} />}\n\n\t\t\t<div className=\"card my-4\">\n\t\t\t\t<div className=\"card-header\">Color Control</div>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"color\"\n\t\t\t\t\t\t\tvalue={color}\n\t\t\t\t\t\t\tonChange={({ target }) => setColor(target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"btn btn-primary ml-2\" onClick={sendColor}>\n\t\t\t\t\t\t\tsend on device\n\t\t\t\t\t\t</button>{\" \"}\n\t\t\t\t\t\tor{\" \"}\n\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={pushColorInCollection}>\n\t\t\t\t\t\t\tpush in libary\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<hr />\n\t\t\t\t\t<h4>Libary</h4>\n\t\t\t\t\t<div className=\"colors-gal-container\">\n\t\t\t\t\t\t{collorsCollection.map((cc) => (\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"colors-gal\"\n\t\t\t\t\t\t\t\tstyle={{ backgroundColor: `rgb(${cc[0]}, ${cc[1]},${cc[2]})` }}\n\t\t\t\t\t\t\t\tkey={`rgb(${cc[0]}, ${cc[1]},${cc[2]})`}\n\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"btn btn-primary\" onClick={sendCollection}>\n\t\t\t\t\t\tsend libary on device\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn btn-danger float-right\"\n\t\t\t\t\t\tonClick={clearColorsCollection}\n\t\t\t\t\t>\n\t\t\t\t\t\tclear\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className=\"card my-4\">\n\t\t\t\t<div className=\"card-header\">Effect Control</div>\n\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t{effects.map((ef, i) => (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-secondary mb-2 w-100\"\n\t\t\t\t\t\t\tkey={ef.n}\n\t\t\t\t\t\t\tonClick={() => sendEffect(i)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ef.l}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}